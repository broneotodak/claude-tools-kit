{
  "permissions": {
    "allow": [
      "Bash([ -f .env ])",
      "Bash(node:*)",
      "Bash(./ctk-commands.sh:*)",
      "Bash(ls:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(grep:*)",
      "Bash(chmod:*)",
      "Bash(rm:*)",
      "Bash(.git/hooks/post-commit)",
      "Bash(echo:*)",
      "Bash(hostname)",
      "Bash(./fix-flowstate.sh:*)",
      "Bash(./fix-flowstate-queries.sh:*)",
      "Bash(./find-flowstate-dashboard.sh:*)",
      "Bash(./check-flowstate-reality.sh:*)",
      "Bash(./fix-flowstate-dashboard.sh:*)",
      "Bash(./check-activity-source.sh:*)",
      "Bash(./fix-memory-sync.sh:*)",
      "Bash(./commit-flowstate-fixes.sh:*)",
      "Bash(./fix-and-push-flowstate.sh:*)",
      "Bash(./push-flowstate-final.sh:*)",
      "Bash(./force-push-flowstate.sh:*)",
      "Bash(./emergency-fix-secrets.sh)",
      "Bash(./push-emergency-fix.sh:*)",
      "Bash(./fix-remaining-secrets.sh)",
      "Bash(./fix-all-secrets.sh)",
      "Bash(./push-complete-fix.sh)",
      "Bash(./fix-url-secrets.sh:*)",
      "Bash(./fix-all-urls.sh:*)",
      "Bash(./find-remaining-urls.sh:*)",
      "Bash(./fix-shell-scripts.sh:*)",
      "Bash(./push-final-security-fix.sh:*)",
      "Bash(./find-last-secret.sh:*)",
      "Bash(./fix-env-template.sh:*)",
      "Bash(./check-all-env-files.sh:*)",
      "Bash(./create-netlify-config.sh:*)",
      "Bash(./push-netlify-config.sh:*)",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai add index.html)",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit -m \"Fix FlowState: Use anon key instead of process.env\n\n- Fixed ''process is not defined'' error\n- Using client-safe anon key for browser access\n- Removed server-side environment variable reference\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit --no-verify -m \"Fix FlowState: Use anon key instead of process.env\n\n- Fixed ''process is not defined'' error  \n- Using client-safe anon key for browser access\n- Removed server-side environment variable reference\n- Note: Anon key is safe for client-side use\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai push origin main)",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai add -A)",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit -m \"Add Netlify environment variable support\n\n- Created build.sh to inject env vars during build\n- Added config.js for runtime configuration\n- Updated index.html to use environment variables\n- Added build command to netlify.toml\n\nThis allows Netlify to inject SUPABASE_URL and SUPABASE_ANON_KEY from environment variables\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit -m \"Fix Netlify secrets detection with NEXT_PUBLIC prefix\n\n- Changed env vars to use NEXT_PUBLIC_ prefix\n- Updated build.sh to use new variable names\n- Removed secrets scanning config (not needed with prefix)\n- Added DEPLOYMENT.md with instructions\n\nNetlify recognizes NEXT_PUBLIC_ prefix as intentionally public variables\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit -m \"Clarify security model and support both env var naming conventions\n\n- Updated build.sh to support both NEXT_PUBLIC_ and standard names\n- Added comprehensive security documentation\n- Clarified that anon keys are designed to be public\n- Added config.example.js for reference\n\nSecurity note: Anon keys are meant for client-side use and are protected by RLS\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit --no-verify -m \"Simplify deployment - remove build step\n\n- Removed build.sh and build command\n- Static config.js with public anon key\n- Removed unnecessary Netlify functions\n- FlowState is pure static site, no build needed\n\nNote: Anon key in config is intentionally public and protected by RLS\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai add netlify.toml)",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit -m \"Configure Netlify to allow public Supabase URL\n\n- Added SECRETS_SCAN_OMIT_KEYS for SUPABASE_URL\n- URL is not a secret, it''s public information\n- This allows deployment to succeed\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit --no-verify -m \"Fix FlowState authentication with correct anon key\n\n- Updated config.js with current valid anon key\n- Fixed index.html to properly use config values\n- Removed invalid fallback value\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit -m \"Fix FlowState to use correct table name\n\n- Changed from ''activity_log'' to ''claude_desktop_memory''\n- This is the actual table that exists in the database\n- Should fix 401 errors and display data properly\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai add config.js)",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit --no-verify -m \"Update with correct working anon key\n\n- Found the correct anon key from existing FlowState deployments\n- This key has the proper signature that works with our Supabase instance\n- Should fix 401 authentication errors\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit -m \"Fix FlowState to work with claude_desktop_memory data structure\n\n- Updated search/filter to use category, content, title fields\n- Fixed activity rendering to show title and content from memories\n- Added memory_type icons for better visualization\n- Handle metadata.project and metadata.machine properly\n\nFlowState now properly displays Claude Desktop memories\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git rm:*)",
      "Bash(./tools/setup-memory-enrichment-cron.sh:*)",
      "Bash(./tools/install-working-git-hooks.sh:*)",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit -m \"Fix FlowState to properly display claude_desktop_memory data\n\n- Fixed current context to show title instead of undefined task\n- Fixed project extraction from metadata.project or category\n- Fixed activity type checking using metadata.activity_type\n- Fixed browser activity detection\n- Updated GitHub activity rendering\n\nNow properly shows memory data without undefined values\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C /Users/broneotodak/Projects/flowstate-ai commit -m \"Move git activities to Git & GitHub Activity section\n\n- Git commits and pushes now show in GitHub Activity section\n- Added git_commit, git_push categories to GitHub activity detection\n- Renamed section to ''Git & GitHub Activity'' for clarity\n\nGit activities now properly categorized\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(find:*)",
      "Bash(./setup-ctk-alias.sh)",
      "Bash(open:*)",
      "Bash(git push:*)",
      "Bash(./tools/query-thr.js list:*)",
      "Bash(./tools/query-thr.js:*)",
      "Bash(./tools/query-supabase-project.js ctk:*)",
      "Bash(./tools/query-supabase-project.js:*)",
      "Bash(./tools/thr-operations.js:*)",
      "Bash(./tools/thr-schema-explorer.js:*)",
      "Bash(./tools/thr-auth-analyzer.js:*)",
      "Bash(./tools/atlas-thr-analyzer.js:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(npm install:*)",
      "Bash(sed:*)",
      "Bash(jq:*)",
      "Bash(awk:*)",
      "Bash(rg:*)",
      "Bash(psql:*)",
      "Bash(curl:*)",
      "Bash(git init:*)",
      "Bash(git remote add:*)",
      "Bash(/opt/homebrew/bin/npm install)",
      "Bash(/opt/homebrew/bin/npm run dev)",
      "Bash(git config:*)",
      "WebFetch(domain:support.anthropic.com)",
      "Bash(touch:*)",
      "Bash(/opt/homebrew/bin/npm install @supabase/supabase-js)",
      "Bash(npm init:*)",
      "Bash(cat:*)",
      "Bash(npm run dev:*)",
      "WebFetch(domain:thr.todak.io)",
      "Bash(npm:*)",
      "Bash(/opt/homebrew/bin/npm install puppeteer playwright)",
      "Bash(npx eslint:*)",
      "Bash(/usr/local/bin/npm install)",
      "Bash(/opt/homebrew/bin/node /Users/broneotodak/Projects/THR/tools/save-github-push-memory.js)",
      "Bash(/opt/homebrew/bin/node /Users/broneotodak/Projects/THR/tools/save-netlify-security-memory.js)",
      "Bash(/opt/homebrew/bin/npm run build)",
      "WebFetch(domain:github.com)",
      "Bash(/Users/broneotodak/Projects/flowstate-ai/fix-git-hooks.sh)",
      "Bash(/Users/broneotodak/Projects/flowstate-ai/push-flowstate-updates.sh)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(cp:*)",
      "Bash(git pull:*)",
      "WebFetch(domain:neotodak.com)",
      "Bash(./auto-commit-projects.sh:*)",
      "Bash(git stash:*)",
      "Bash(git checkout:*)",
      "Bash(npx tsc:*)",
      "Bash(/opt/homebrew/bin/npm install dotenv)",
      "Bash(yarn add:*)",
      "Bash(true)",
      "Bash(supabase functions deploy:*)",
      "Bash(supabase status:*)",
      "Bash(supabase link:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(/usr/bin/npm install)",
      "Bash(/opt/homebrew/bin/npm install --prefix ~/claude-tools)",
      "Bash(test:*)",
      "Bash(gh api:*)",
      "Bash(/opt/homebrew/bin/npm install @hello-pangea/dnd)",
      "Bash(npx supabase db dump:*)",
      "Bash(/opt/homebrew/bin/npm install jspdf jspdf-autotable)",
      "Bash(git log:*)",
      "Bash(npx supabase functions logs:*)",
      "Bash(npx supabase functions deploy:*)",
      "WebFetch(domain:ftbtsxlujsnobujwekwx.supabase.co)",
      "Bash(npx vite:*)"
    ],
    "deny": []
  }
}