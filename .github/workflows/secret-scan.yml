name: Secret Scan

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

jobs:
  scan-secrets:
    runs-on: ubuntu-latest
    name: Scan for secrets
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get changed files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "files=$(git diff --name-only origin/${{ github.base_ref }}..HEAD | tr '\n' ' ')" >> $GITHUB_OUTPUT
          else
            echo "files=$(git diff --name-only HEAD~1..HEAD | tr '\n' ' ')" >> $GITHUB_OUTPUT
          fi
      
      - name: Scan for secrets
        if: steps.changed-files.outputs.files != ''
        run: |
          set -e
          
          # Secret patterns to check
          patterns=(
            'sk-[A-Za-z0-9_-]{20,}'
            'ghp_[A-Za-z0-9]{36}'
            'gho_[A-Za-z0-9]{36}'
            'github_pat_[A-Za-z0-9]{22}_[A-Za-z0-9]{59}'
            'AKIA[0-9A-Z]{16}'
            'sb-[a-zA-Z0-9]{20,}'
            'eyJ[a-zA-Z0-9_-]{10,}\.[a-zA-Z0-9_-]{10,}\.[a-zA-Z0-9_-]{10,}'
            'postgres://[^:]+:[^@]+@'
            'postgresql://[^:]+:[^@]+@'
          )
          
          # Safe patterns to ignore
          safe_patterns='(tokensIn|tokensOut|llm_tokens_in|llm_tokens_out)'
          
          found_secrets=0
          
          for file in ${{ steps.changed-files.outputs.files }}; do
            # Skip non-existent, binary, and allowed files
            if [ ! -f "$file" ]; then continue; fi
            if [[ "$file" =~ \.(png|jpg|jpeg|gif|ico|pdf|zip|tar|gz)$ ]]; then continue; fi
            if [[ "$file" =~ \.env\.(template|example)$ ]]; then continue; fi
            if [[ "$file" == ".secretsignore" ]]; then continue; fi
            
            # Check for .env files
            if [[ "$file" =~ \.env($|[^.]) ]] && [[ ! "$file" =~ \.(template|example)$ ]]; then
              echo "❌ ERROR: Attempting to commit .env file: $file"
              found_secrets=1
              continue
            fi
            
            # Check for private key files
            if [[ "$file" =~ \.(pem|key|p12|pfx)$ ]]; then
              echo "❌ ERROR: Attempting to commit private key file: $file"
              found_secrets=1
              continue
            fi
            
            # Scan file content
            line_no=0
            while IFS= read -r line; do
              line_no=$((line_no+1))
              
              # Skip lines with safe patterns
              if echo "$line" | grep -Eq "$safe_patterns"; then
                continue
              fi
              
              # Check each secret pattern
              for pattern in "${patterns[@]}"; do
                if echo "$line" | grep -Eq "$pattern"; then
                  echo "❌ SECURITY: Potential secret in $file:$line_no"
                  echo "   Pattern: $pattern"
                  echo "   Preview: $(echo "$line" | cut -c1-80)..."
                  found_secrets=1
                  break
                fi
              done
            done < "$file"
          done
          
          if [ $found_secrets -eq 1 ]; then
            echo ""
            echo "⛔ Secret scan failed! Found potential secrets in the code."
            echo "Please remove sensitive data and use environment variables instead."
            exit 1
          fi
          
          echo "✅ Secret scan passed - no secrets detected"